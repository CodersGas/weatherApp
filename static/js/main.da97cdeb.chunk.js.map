{"version":3,"sources":["components/header.js","components/apiKey.js","components/cardDetails.js","components/eachDayCard.js","components/weatherContainer.js","components/form.js","components/backgroundChange.js","index.js"],"names":["moment","require","header","date","Date","time","getTime","format","className","Component","apiConfig","apiKey","domNode","document","getElementById","popup","rootContainer","CardDetails","handleClose","props","action","style","display","querySelector","classList","overflow","filter","weatherDetails","maxTemp","minTemp","humidity","feelsLike","pressure","reading","this","dt_txt","Math","round","main","temp_max","temp_min","feels_like","ReactDOM","createPortal","onClick","DayCard","handleShowDetails","e","state","showDetails","target","parentElement","setState","showMobileDetails","currentCardDate","innerHTML","bind","newDate","weekDay","dt","setTime","currentTime","imgURL","weather","id","Fragment","temp","description","type","WeatherContainer","componentDidMount","city","cityState","weatherURL","ApiConfig","time24Hr","currentTimePlus1","parseInt","toString","currentTimePlus2","timeArray","fetch","then","res","json","data","undefined","list","alert","dailyData","some","includes","fullData","formatDailyCards","map","index","key","enterAnimation","staggerDelayBy","LocationForm","handleWeatherClick","preventDefault","inputValue","current","value","split","showWeatherContainer","handleOnChange","weatherContainer","React","createRef","htmlFor","onChange","ref","placeholder","BackgroundChange","body","destination","render"],"mappings":"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","file":"static/js/main.da97cdeb.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport '../styles/header.css';\n\nvar moment = require('moment');\nclass header extends Component {\n  render() {\n\n    let date = new Date();\n    let time = moment(date.getTime()).format('HH');\n\n    return(\n      <div className={(time > 5 && time <= 16) ? 'header' : 'nightHeader'}>\n        <h1>weather forecaster</h1>\n      </div>\n    )\n  }\n}\n\nexport default header;","var apiConfig = {\n  apiKey: '609f8f7580e73244a059ca1f4c173f56'\n}\n\nexport default apiConfig;","import React, {Component} from 'react';\nimport FadeIn from 'react-fade-in';\nimport ReactDOM from 'react-dom';\nimport '../styles/cardDetailsStyle.css';\n\nconst domNode = document.getElementById('cardDetailsPopup');\nconst popup = document.getElementById('cardDetailsPopup');\nconst rootContainer = document.getElementById('rootContainer');\n\nclass CardDetails extends Component {\n\n  handleClose = () => {\n    this.props.action();\n    popup.style.display = 'none';\n    document.querySelector('.activeCard').classList = 'cardDate';\n    document.querySelector('body').style.overflow = 'auto';\n    //popup.innerHTML = '';\n    rootContainer.style.filter = 'blur(0)';\n  }\n\n  render() {\n    \n    let weatherDetails = {\n      maxTemp: null,\n      minTemp: null,\n      humidity: null,\n      feelsLike: null,\n      pressure: null,\n    }\n\n    const {reading} = this.props;\n\n    document.getElementById('cardDetailsPopup').style.display = 'block';\n    document.getElementById('rootContainer').style.filter = 'blur(2px)';\n\n    if (reading.dt_txt) {\n      weatherDetails.maxTemp = Math.round(reading.main.temp_max) + 2;\n      weatherDetails.minTemp = Math.round(reading.main.temp_min);\n      weatherDetails.humidity = reading.main.humidity;\n      weatherDetails.feelsLike = Math.round(reading.main.feels_like);\n      weatherDetails.pressure = reading.main.pressure;\n    }\n\n    return ReactDOM.createPortal(\n      <FadeIn>\n      <div className='weatherDetails'>\n        <h6 onClick={this.handleClose} className='close'>X</h6>\n        <h1>Max Temp : {weatherDetails.maxTemp} °C</h1>\n        <h1>Min Temp : {weatherDetails.minTemp} °C</h1>\n        <h1>Feels Like : {weatherDetails.feelsLike} °C</h1>\n        <h1>Humidity : {weatherDetails.humidity}</h1>\n        <h1>Pressure: {weatherDetails.pressure} mBar</h1>\n      </div>\n      </FadeIn>,\n      domNode\n    )\n  }\n}\n\nexport default CardDetails;","import React, {Component} from 'react';\nimport CardDetails from './cardDetails';\nimport '../styles/dayCard.css';\n\nvar moment = require('moment');\nclass DayCard extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showDetails: false,\n      currentCardDate: null,\n    }\n\n    this.handleShowDetails = this.handleShowDetails.bind(this);\n  }\n\n  handleShowDetails = (e) => {\n\n    if(!this.state.showDetails) {\n      e.target.parentElement.querySelector('.cardDate').classList = 'activeCard';\n      document.querySelector('body').style.overflow = 'hidden';\n\n      this.setState({\n        showDetails: true,\n        showMobileDetails: true,\n        currentCardDate: e.target.parentElement.querySelector('.activeCard').innerHTML\n      }); \n    } else {\n      e.target.parentElement.querySelector('.activeCard').classList = 'cardDate';\n      this.setState({\n        showDetails: false\n      });\n    }\n  }\n\n  handleClose = () => {\n    this.setState({\n      showDetails: false\n    })\n  }\n\n  render(){\n\n    const reading = this.props.reading;\n    let newDate = new Date();\n    const weekDay = reading.dt * 1000;\n    newDate.setTime(weekDay);\n  \n    let today = new Date();\n    var currentTime = today.getTime();\n  \n    const imgURL = `owf owf-${reading.weather[0].id} owf-5x`;\n    \n    return(\n      <React.Fragment>\n        <div className='eachDay col-sm-2'>\n          <div className='card'>\n            <h3 className='cardTitle'>{moment(newDate).format('dddd')}</h3>\n            <p className='cardDate'> {moment(newDate).format('MMMM Do, ') + moment(currentTime).format('hh:mm a')}</p>\n            <i className={imgURL}></i>\n            <h2>{Math.round(reading.main.temp)} °C</h2>\n            <div className='cardBody'>\n              <p className='cardText'>{reading.weather[0].description}</p>\n            </div>\n            <button type='button' onClick={(e) => this.handleShowDetails(e)}>See More</button>\n          </div>\n        </div>\n\n        {(this.state.showDetails) ? <CardDetails reading={reading} action={this.handleClose} /> : ''}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DayCard;","import React, {Component} from 'react';\nimport ApiConfig from './apiKey';\nimport DayCards from './eachDayCard';\nimport '../styles/weatherContainer.css';\nimport moment from 'moment';\nimport FlipMove from 'react-flip-move';\n\nclass WeatherContainer extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fullData: [],\n      dailyData: []\n    }\n  }\n\n  componentDidMount = () => {\n    const {city, cityState} = this.props;\n\n    if(city === '' || cityState === '') {\n      alert('Please enter location..');\n      return;\n    }\n\n    const weatherURL = `//api.openweathermap.org/data/2.5/forecast?q=${city},${cityState}&units=metric&appid=${ApiConfig.apiKey}`;\n\n    const date = new Date();\n    var currentTime = date.getTime();\n    var time24Hr = moment(currentTime).format('HH');\n\n    var currentTimePlus1 = (parseInt(time24Hr) + 1).toString();\n    var currentTimePlus2 = (parseInt(time24Hr) + 2).toString();\n\n    currentTimePlus1 = (currentTimePlus1 > 0 && currentTimePlus1 < 10) ? '0' + currentTimePlus1 : currentTimePlus1;\n    currentTimePlus2 = (currentTimePlus2 > 0 && currentTimePlus2 < 10) ? '0' + currentTimePlus2 : currentTimePlus2;\n\n    var timeArray = [\n      (((time24Hr === '24') ? '00' : time24Hr) + ':00:00'), \n      (((currentTimePlus1 === '24') ? '00': currentTimePlus1) + ':00:00'), \n      (((currentTimePlus2 === '24') ? '00': currentTimePlus2 ) + ':00:00')\n    ];\n\n    fetch(weatherURL)\n    .then(res => res.json())\n    .then(data => {\n\n      if(data.list === undefined) {\n        alert('Enter correct location...');\n      }\n\n      const dailyData = data.list.filter(reading => timeArray.some(time => reading.dt_txt.includes(time)));\n      this.setState({\n        fullData: data.list,\n        dailyData:dailyData\n      });\n    });\n  } \n\n  formatDailyCards = () => {\n    return this.state.dailyData.map((reading, index) => <DayCards reading={reading} index={index} key={index} />);\n  } \n\n  render() {\n    const {city, cityState} = this.props;\n\n    return(\n      <div className='weatherContainer container'>\n        \n        <h5 className='display-5'>{city}, {cityState}</h5>\n\n        <FlipMove className='row justify-content-center' enterAnimation='elevator' staggerDelayBy={150}>\n          {this.formatDailyCards()}\n        </FlipMove>\n      </div>\n    )\n  }\n}\n\nexport default WeatherContainer;","import React, {Component} from 'react';\nimport WeatherContainer from './weatherContainer';\nimport '../styles/formStyle.css';\n\nvar moment = require('moment');\nclass LocationForm extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.handleWeatherClick = this.handleWeatherClick.bind(this);\n\n    this.inputValue = React.createRef();\n\n    this.state = {\n      showWeatherContainer: false,\n      city: null,\n      cityState: null\n    }\n  }\n\n  handleWeatherClick = (e) => {\n    e.preventDefault();\n\n    var inputValue = this.inputValue.current.value.split(',');\n\n    if(!this.state.showWeatherContainer) {\n      this.setState({\n        showWeatherContainer: true,\n        city: inputValue[0],\n        cityState: inputValue[1]\n\n      });\n    } else {\n      this.setState({\n        showWeatherContainer: false\n      });\n    }\n  }\n\n  handleOnChange = () => {\n    const weatherContainer = document.querySelector('.weatherContainer');\n\n    if(weatherContainer === null) {\n      return;\n    } else {\n      weatherContainer.style.display = 'none';\n      this.setState({\n        showWeatherContainer: false\n      })\n    }\n  }\n\n  render() {\n\n    let date = new Date();\n    let time = moment(date.getTime()).format('HH');\n\n    return(\n      <React.Fragment>\n        <div className={(time > 5 && time <= 16)? 'formContainer container' : 'nightFormContainer container'}>\n          <div className='row'>\n            <form className='col-md-6'>\n              <label htmlFor='location'>enter the location</label>\n              <input onChange={this.handleOnChange} ref={this.inputValue} id='location' placeholder='(city, state)'></input>\n              <button type='submit' onClick={(e) => this.handleWeatherClick(e)}>get weather</button>\n            </form>\n          </div>\n        </div>\n\n        {(this.state.showWeatherContainer) ? <WeatherContainer city={this.state.city} cityState={this.state.cityState} />: ''}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default LocationForm;\n","import React, {Component} from 'react';\nimport '../styles/backgrounds.css';\n\nvar moment = require('moment');\nclass BackgroundChange extends Component {\n  render() {\n\n    const body = document.querySelector('body');\n    let date = new Date();\n    let time = moment(date.getTime()).format('HH');\n  \n    time = (time === '00') ? '24' : time;\n\n    if (time >= 5 && time < 12) {\n      body.classList = 'morning';\n    } else if (time >= 12 && time <= 16) {\n      body.classList = 'noon';\n    } else if (time > 16 && time <= 17) {\n      body.classList = 'evening';\n    } else if ((time > 17 && time <= 24) || (time > 0 && time < 5)) {\n      body.classList = 'night';\n    }\n\n\n\n    return(\n      <React.Fragment>\n        \n      </React.Fragment>\n    )\n  }\n}\n\nexport default BackgroundChange;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from './components/header';\nimport LocationForm from './components/form';\nimport BackgroundChange from './components/backgroundChange';\nimport './styles/dayCard.css';\n\nconst destination = document.getElementById('rootContainer');\n\nReactDOM.render(\n  <React.Fragment>\n    <Header />\n    <LocationForm />\n    <BackgroundChange />\n    {/*<Footer />*/}\n  </React.Fragment>,\n  destination\n)"],"sourceRoot":""}